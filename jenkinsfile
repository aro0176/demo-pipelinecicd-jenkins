pipeline {
    agent any

    stages {

        stage('Clone') {
            steps {
		sh "rm -fr *"
                git branch: 'main', url: 'https://github.com/aro0176/demo-react.git'
            }
        }
        stage('Run') {
	    steps {
	    	sh "npm install"
	    }
	}
        stage('Test && Build') {
            steps {
                sh "npm run build"
                sh "cp -fr dist /var/lib/jenkins/Buildapp"
            }
        }

        stage('Deploy') {
            steps {
		sh 'rm -fr *'
		git branch: 'main', url: 'https://github.com/aro0176/demo-pipelinecicd-jenkins.git'
                ansiblePlaybook installation: 'ansible', inventory: 'hosts.ini', playbook: 'deploy.yml', vaultTmpPath: ''
            }
        }
    }
    
    post {
        failure {
          emailext(
            subject: "Échec du pipeline CI/CD",
            body: "Alerte!!! Alerte!!!! Le Pipeline React a échoue, Veuillez voir le logs pour réparer",
            to: "aroiorenantsoa@gmail.com"
        )
    }

    success {
        emailext(
            subject: "Succès du pipeline CI/CD",
            body: "Le pipeline Reactjs et FastApi a été exécuté avec succès. Prends soins de toi Mr Toavina https://349d-154-126-9-240.ngrok-free.app/view/demo/job/demokeli/",
            to: "aroiorenantsoa@gmail.com"
        )
    }
}

}
